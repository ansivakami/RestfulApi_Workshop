1. query { 
  viewer { 
    login
    name
    url
    email
  }
}

2. query{
  viewer {
    login
    repositories(first: 3, orderBy: {direction:DESC, field: CREATED_AT}) {
      nodes{
        name
        url
        description
      }
    }
  }
}

3. query {
  user(login: "fred"){
    bio
    name
    email
  }
}

4. query{
  search( first: 20, query: "angular", type: REPOSITORY){
    nodes {
      ... on Repository {
        name
        url
        description     
      }
    }
  }
}

5. query{
  search( first: 20, query: "angular", type: REPOSITORY){
    nodes {
      ... on Repository {
        name
        url
        description     
      }
      ... on Issue {
	author
	login
	url
	}
	comments{
          edges{
           id
         }
       }
    }
  }
}

6. mutation{
  createRepository(input: {name: "my4pm-repo", visibility: PUBLIC}){
    repository{
      id
    }
  }
}
 mutation{
  createBranchProtectionRule(input: {repositoryId: "R_kgDOH4QlDA", 
    pattern: "main", requiresApprovingReviews: true, 
    requiredApprovingReviewCount: 2, allowsDeletions: false,}){
    clientMutationId
  }
}
7. Curi -X POST -H 'Authentication: Bearer <tokenId>' --data-binary @query.graphql https://api.github.com/graphql
